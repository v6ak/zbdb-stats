import org.scalajs.linker.interface.ModuleSplitStyle

val appVersion= "1.0"

lazy val scalaV3 = "3.3.1"

def sharedSettings(namePart: String) = Seq(
  name := s"zbdb-stats-${namePart}",
  version := appVersion,
  scalacOptions ++= Seq("-deprecation", "-feature"),
  scalaVersion := scalaV3,
)


// Generates resources, i.e., HTML files, years.json and downloads CSV files
lazy val resourcegen = (project in file("resourcegen"))
  .enablePlugins(ScalaJSPlugin)
  .settings(
    sharedSettings("resoucegen"),
    scalaJSUseMainModuleInitializer := false,
    scalaJSLinkerConfig ~= {
      _.withModuleKind(ModuleKind.ESModule)
        // Not needed, as this code is not distributed to the user. It would just take some additional time during build
        .withClosureCompilerIfAvailable(false)
        // Just one fat module in order to be compatible with importFresh
        .withModuleSplitStyle(ModuleSplitStyle.FewestModules)
    },
    libraryDependencies ++= Seq(
      "com.lihaoyi" %%% "scalatags" % "0.12.0",
    )
  )

// Generates client JS; other assets are generated by the server subproject
lazy val client = (project in file("client")).settings(
  sharedSettings("client"),
  scalaJSUseMainModuleInitializer := true,
  Test / scalaJSUseMainModuleInitializer := false,
  webpack / version := "5.88.2", // https://github.com/ScalablyTyped/Converter/issues/546
  webpackConfigFile := Some(baseDirectory.value / "custom.webpack.config.js"),
  fastOptJS / scalaJSLinkerConfig ~= {
    _.withModuleKind(ModuleKind.ESModule)
      .withModuleSplitStyle(ModuleSplitStyle.SmallestModules)
  },
  fullOptJS / scalaJSLinkerConfig ~= {
    _.withModuleKind(ModuleKind.ESModule)
      .withModuleSplitStyle(ModuleSplitStyle.FewestModules)
  },

  libraryDependencies ++= Seq(
    "org.scala-js" %%% "scalajs-dom" % "2.7.0",
    "com.lihaoyi" %%% "scalatags" % "0.12.0",
  ),
).enablePlugins(ScalaJSPlugin)

name := "zbdb-stats"

version := appVersion

