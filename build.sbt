import org.scalajs.linker.interface.ModuleSplitStyle

name := "zbdb-stats"

val appVersion = "1.0"

version := appVersion

def sharedSettings(namePart: String) = Seq(
  name := s"zbdb-stats-${namePart}",
  version := appVersion,
  scalacOptions ++= Seq("-deprecation", "-feature"),
  scalaVersion := "3.3.1",
)

// Generates resources, i.e., HTML files, years.json and downloads CSV files
lazy val resourcegen = (project in file("resourcegen"))
  .enablePlugins(ScalaJSPlugin)
  .settings(
    sharedSettings("resoucegen"),
    scalaJSUseMainModuleInitializer := false,
    scalaJSLinkerConfig ~= {
      _.withModuleKind(ModuleKind.ESModule)
        // Not needed, as this code is not distributed to the user. It would just take some additional time during build
        .withClosureCompilerIfAvailable(false)
        // Just one fat module in order to be compatible with importFresh
        .withModuleSplitStyle(ModuleSplitStyle.FewestModules)
    },
    libraryDependencies ++= Seq(
      "com.lihaoyi" %%% "scalatags" % "0.12.0",
    )
  )

// Generates client JS; other assets are generated by the server subproject
lazy val client = (project in file("client")).enablePlugins(ScalaJSPlugin).settings(
  sharedSettings("client"),
  scalaJSUseMainModuleInitializer := true,
  Test / scalaJSUseMainModuleInitializer := false,
  fastOptJS / scalaJSLinkerConfig ~= {
    _.withModuleKind(ModuleKind.ESModule)
      .withModuleSplitStyle(ModuleSplitStyle.SmallModulesFor(List("com.v6ak.zbdb")))
  },
  fullOptJS / scalaJSLinkerConfig ~= {
    _.withModuleKind(ModuleKind.ESModule)
      .withModuleSplitStyle(ModuleSplitStyle.FewestModules)
  },

  libraryDependencies ++= Seq(
    "org.scala-js" %%% "scalajs-dom" % "2.7.0",
    "com.lihaoyi" %%% "scalatags" % "0.12.0",
  ),
)
